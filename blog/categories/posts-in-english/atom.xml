<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: posts in english | Mirko Caserta]]></title>
  <link href="http://mirkocaserta.com/blog/categories/posts-in-english/atom.xml" rel="self"/>
  <link href="http://mirkocaserta.com/"/>
  <updated>2013-03-19T13:20:09+01:00</updated>
  <id>http://mirkocaserta.com/</id>
  <author>
    <name><![CDATA[Mirko Caserta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OS X Launchpad Clean Up]]></title>
    <link href="http://mirkocaserta.com/blog/2013/03/09/os-x-launchpad-cleanup/"/>
    <updated>2013-03-09T14:29:00+01:00</updated>
    <id>http://mirkocaserta.com/blog/2013/03/09/os-x-launchpad-cleanup</id>
    <content type="html"><![CDATA[<p>I quite like OS X Launchpad. The only problem is it gets quite messy
after a while. The way I fix it is by spraying napalm over its cache and
restarting the dock:</p>

<p><code>bash Clean up Launchpad
$ rm ~/Library/Application\ Support/Dock/*.db &amp;&amp; killall -KILL Dock
</code></p>

<p>I use this command so often that I have an alias for it:</p>

<p><code>bash Clean up Launchpad shell alias
$ alias culp='rm ~/Library/Application\ Support/Dock/*.db &amp;&amp; killall -KILL Dock'
</code></p>

<p>The <code>alias</code> command should work both in bash and zsh. My mnemonic for
<code>culp</code> is Clean Up Launch Pad.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SBT Company Wide Settings Example]]></title>
    <link href="http://mirkocaserta.com/blog/2013/02/23/sbt-bom-example/"/>
    <updated>2013-02-23T14:29:00+01:00</updated>
    <id>http://mirkocaserta.com/blog/2013/02/23/sbt-bom-example</id>
    <content type="html"><![CDATA[<p>I know it looks like I haven't been posting much lately. Anyway, I'm studying <a href="http://www.scala-lang.org/">Scala</a> programming and, among other things, I came upon the awesome <a href="http://www.scala-sbt.org/">Simple Build Tool</a> (SBT for short).</p>

<p>SBT looks like a mighty and untamable beast at first glance. But, after a closer look and a patient walkthrough of the <a href="http://www.scala-sbt.org/release/docs/index.html">online docs</a> and the practical examples, I must say it is an awesome tool, very worth the learning effort.</p>

<p>One of the first issues I had to face in SBT was implementing what I was previously doing with a <a href="http://code.google.com/p/m4enterprise/wiki/CorporatePOM">Maven Corporate POM</a>. In other words, I needed a mechanism to control the master build settings for all of a company's artifacts.</p>

<p>I ended up publishing an <a href="https://github.com/mcaserta/sbt-bom-example" title="SBT Company Wide Settings Example">SBT Company Wide Settings Example project on GitHub</a>. There is an extensive <a href="https://github.com/mcaserta/sbt-bom-example/blob/master/README.markdown">readme</a> that explains how I am doing it.</p>

<p>As usual, feedback is welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Scala World!]]></title>
    <link href="http://mirkocaserta.com/blog/2012/10/31/hello-scala-world/"/>
    <updated>2012-10-31T11:57:00+01:00</updated>
    <id>http://mirkocaserta.com/blog/2012/10/31/hello-scala-world</id>
    <content type="html"><![CDATA[<p>I've just published an <a href="https://github.com/mcaserta/hello-scala-world" title="Hello Scala World!">Hello Scala World! project on GitHub</a> that you can use to quickly setup a Scala hacking environment. This is particularly useful if you run Intellij Idea with the Scala plugin since simply opening the pom as a project will get you all the comforts you would expect in a modern ide.</p>

<p>You also get support for running <a href="http://etorreborre.github.com/specs2/">specs2 specifications</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clustering Issues?]]></title>
    <link href="http://mirkocaserta.com/blog/2012/09/24/clustering-issues/"/>
    <updated>2012-09-24T14:47:00+02:00</updated>
    <id>http://mirkocaserta.com/blog/2012/09/24/clustering-issues</id>
    <content type="html"><![CDATA[<p>The number one culprit for a non working cluster is a misconfigured /etc/hosts file. This is because of how some software implementation announces its availability on the network. Typically, if you have a resolver configured so that the domain name of your local node points to the loopback address, you have a problem.</p>

<p>Some Linux distributions (Ubuntu, I’m looking at you!) ship with an /etc/hosts that looks like this (supposing the hostname is cat and the domain name is foo.bar):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/etc/hosts </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>127.0.0.1    localhost
</span><span class='line'>127.0.1.1    cat.foo.bar cat</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>For some reason, a few software implementations use the resolver to infer the address of the node they’re running on, then start sending out messages such as “Hey, I’m available. You can find me at 127.0.1.1”, which is the problem because you want the node to advertise its availability with a real ip address (usually the one that is bound to the main network interface).</p>

<p>The solution is to get rid of the 127.0.1.1 line. You’re welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring Crypto Utils 1.3.0]]></title>
    <link href="http://mirkocaserta.com/blog/2012/08/27/spring-crypto-utils-1.3.0/"/>
    <updated>2012-08-27T14:47:00+02:00</updated>
    <id>http://mirkocaserta.com/blog/2012/08/27/spring-crypto-utils-1.3.0</id>
    <content type="html"><![CDATA[<p>I’ve released a new version of Spring Crypto Utils. The project now has a gorgeous, shiny, sleek, new website on the <a href="http://springcryptoutils.com" title="Spring Crypto Utils">springcryptoutils.com</a> domain. The website is made possible thanks to the kind folks at <a href="https://github.com/" title="GitHub">GitHub</a> and their <a href="http://pages.github.com/" title="GitHub Pages">GitHub pages</a> hosting facility.</p>

<p>Please read the notes in the <a href="http://springcryptoutils.com/changelog.html" title="Spring Crypto Utils: ChangeLog">changelog</a> if you’re upgrading.</p>

<p>I must say moving to GitHub was a smart move since contributing to the project is very much easier now thanks to git pull requests. I would like to thank Chad Johnston and Martin Bosak for their contributions: respectively, <a href="https://github.com/mcaserta/spring-crypto-utils/commit/b0c7e8dab8c3f9ead869055aa460feb0dc5af4f6">the certificate element</a> and the <a href="https://github.com/mcaserta/spring-crypto-utils/commit/15f305e522bd3c85eec7cc46a50e18385f324b9e">provider attribute</a>.</p>

<p>I hope users will find the documentation easier to read. Here is an example regarding <a href="http://springcryptoutils.com/signature-m.html">digital signatures with runtime selection of multiple keys</a>.</p>
]]></content>
  </entry>
  
</feed>
